#!/opt/pwn.college/python

import errno
import sys
import os
import subprocess 

MARKER = "/tmp/disk_doomsday_phase1"
TEST_FILE = "/home/hacker/.space_test" 
TEST_SIZE = 1 * 1024 * 1024 # 1MB

def check_space_with_df():
    try:
        command = ['df', '-PB1', '/home/hacker']
        result = subprocess.run(
            command,
            capture_output=True, 
            text=True,           
            check=True           
        )

        output_lines = result.stdout.strip().splitlines()
        
        if len(output_lines) < 2:
            print("错误：无法解析 df 的输出。")
            sys.exit(1)
        
        data_line = output_lines[1]
        columns = data_line.split()
        
        if len(columns) < 4:
            print("错误：无法解析 df 的输出列。")
            sys.exit(1)
            
        available_space_bytes = int(columns[3])

        return available_space_bytes >= TEST_SIZE

    except (subprocess.CalledProcessError, FileNotFoundError, ValueError, IndexError) as e:
        print(f"使用 df 检查磁盘空间时发生错误: {e}")
        sys.exit(1)


can_create = check_space_with_df()

if not os.path.exists(MARKER):
    if can_create:
        print(
            "空间还很充足。请填满 /home/hacker 目录，直到无法创建 1MB 的文件，然后再次运行本检查程序。"
        )
    else:
        open(MARKER, "w").close()
        print(
            "干得漂亮，你成功塞满了磁盘。现在请释放空间（删除你创建的文件），然后再次运行 /challenge/solve 来证明你已经清理干净了！"
        )
elif not can_create:
    print("仍然没有足够的空间。请继续清理，然后重试！")
else:
    print("磁盘空间已恢复。这是你的 flag：")
    print(open("/flag").read().strip())
