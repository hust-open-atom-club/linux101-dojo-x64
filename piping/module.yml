name: 管道练习

challenges:

  - id: "echo"
    name: "重定向输出"
  
  #缺少必要依赖库
  #- id: "stdout-myflag"
    #name: "重定向更多输出"
  
  #缺少必要依赖库
  #- id: "append"
    #name: "追加输出"
  
  #缺少必要依赖库
  #- id: "stderr-myflag"
    #name: "重定向错误"
  
  - id: "stdin"
    name: "重定向输入"
  
  #缺少必要依赖库
  #- id: "redir-then-grep"
    #name: "搜索已存储的结果"
  
  #缺少必要依赖库
  #- id: "pipe-grep"
    #name: "搜索实时输出"
  
  #缺少必要依赖库
  #- id: "stderr-grep"
    #name: "搜索错误信息"
  
  - id: "grep-invert"
    name: "使用 grep -v 进行过滤"
  
  #缺少必要依赖库
  #- id: "tee"
    #name: "使用 tee 复制管道数据"
  
  - id: "procsub-write"
    name: "写入到多个程序"
  
  - id: "dualpiper"
    name: "分离管道传输 stderr 和 stdout"
  
resources:
- name: Resources
  type: markdown
  content: |
    - 一篇关于[Linux shell 中 I/O 重定向的论述](https://web.archive.org/web/20220629044814/http://bencane.com:80/2012/04/16/unix-shell-the-art-of-io-redirection/)，对本次作业很有帮助。
    - 一个很棒的关于 Linux [I/O 重定向的可视化指南](http://www.rozmichelle.com/pipes-forks-dups/)。
